openapi: "3.0.0"

info:
  version: 1.0.0
  title: Product Rest APId
  description: API Rest definition to manage products

servers:
  - url: http://localhost:8080
    description: Local

security:
  - BearerAuth: []

tags:
  - name: Products
    description: Section of the products

  - name: Product reviews
    description: Section of the product reviews

paths:
  /v1/products:
    get:
      operationId: search-products
      summary: Search products
      description: Search products
      tags:
        - Products
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
          description: Number of the page
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          description: Size of the page
          required: true
        - in: query
          name: name
          schema:
            type: string
          description: Name of the product
        - in: query
          name: order
          schema:
            $ref: './products.yml#/components/schemas/ProductFilterOrder'
          description: Order of the result
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './products.yml#/components/schemas/Product'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

    post:
      operationId: create-product
      summary: Create product
      description: Create product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './products.yml#/components/schemas/ProductInput'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './products.yml#/components/schemas/Product'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

  /v1/products/{productCode}:
    get:
      operationId: get-product
      summary: Get product
      description: Get product
      tags:
        - Products
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './products.yml#/components/schemas/Product'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

    put:
      operationId: update-product
      summary: Update product
      description: Update product
      tags:
        - Products
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './products.yml#/components/schemas/ProductInput'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './products.yml#/components/schemas/Product'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

    delete:
      operationId: delete-product
      summary: Delete product
      description: Delete product
      tags:
        - Products
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './products.yml#/components/schemas/Product'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

  /v1/products/{productCode}/status:
    put:
      operationId: update-product-status
      summary: Update product status
      description: Update product status
      tags:
        - Products
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './products.yml#/components/schemas/UpdateProductStatusInput'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './products.yml#/components/schemas/Product'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

  /v1/products/{productCode}/reviews:
    post:
      operationId: create-product-review
      summary: Create product review
      description: Create product review
      tags:
        - Product reviews
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './product-reviews.yml#/components/schemas/CreateProductReviewInput'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './product-reviews.yml#/components/schemas/ProductReview'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

    get:
      operationId: search-product-reviews
      summary: Search product reviews
      description: Search product reviews
      tags:
        - Product reviews
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './product-reviews.yml#/components/schemas/ProductReview'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

  /v1/products/{productCode}/reviews/{username}:
    get:
      operationId: get-product-review
      summary: Get product review
      description: Get product review
      tags:
        - Product reviews
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
        - $ref: './users.yml#/components/parameters/usernamePath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './product-reviews.yml#/components/schemas/ProductReview'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

    put:
      operationId: update-product-review
      summary: Update product review
      description: Update product review
      tags:
        - Product reviews
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
        - $ref: './users.yml#/components/parameters/usernamePath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './product-reviews.yml#/components/schemas/UpdateProductReviewInput'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './product-reviews.yml#/components/schemas/ProductReview'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

    delete:
      operationId: delete-product-review
      summary: Delete product review
      description: Delete product review
      tags:
        - Product reviews
      parameters:
        - $ref: './products.yml#/components/parameters/productCodePath'
        - $ref: './users.yml#/components/parameters/usernamePath'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: './product-reviews.yml#/components/schemas/ProductReview'
        default:
          $ref: './shared.yml#/components/responses/ProblemDetailsResponse'

components:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT security

