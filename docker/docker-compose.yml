version: '3.9'

services:

  mongodb:
    image: mongo:7.0
    container_name: products_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: products
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/initdb:/docker-entrypoint-initdb.d:ro

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: products_zookeeper
    hostname: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: products_kafka
    hostname: kafka
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    container_name: products_schema-registry
    hostname: schema-registry
    restart: always
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"
    depends_on:
      - zookeeper
      - kafka

  postgresql:
    image: postgres:14
    container_name: products_postgresql
    hostname: postgresql
    restart: always
    environment:
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "conduktor"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"

  conduktor:
    image: conduktor/conduktor-platform:1.18.1
    container_name: products_conduktor
    hostname: conduktor
    restart: always
    environment:
      CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml
    ports:
      - "8080:8080"
    volumes:
      - ./conduktor/platform-config.yml:/opt/conduktor/platform-config.yaml:ro
    depends_on:
      - postgresql

  conduktor-cortex:
    image: conduktor/conduktor-platform-cortex:1.18.1
    container_name: products_conduktor-cortex
    hostname: conduktor-cortex
    restart: always
    environment:
      CDK_CONSOLE-URL: "http://conduktor-console:8080"